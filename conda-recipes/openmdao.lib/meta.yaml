{% set pkg_version = environ['PKG_VERSION'] %}
{% set remote = "https://github.com/OpenMDAO/OpenMDAO-Framework.git" %}

{% if pkg_version == "dev" %}
{% set source="git_url: {}\n  git_branch: {}".format(remote, pkg_version) %}
{% else %}
{% set source="  git_url: {}\n  git_branch: {}".format(remote, pkg_version) %}
{% endif %}

package:
  name: openmdao.lib
  version: !!str {{ pkg_version }}

source:
{{ source }}

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - setuptools
    - openmdao.main
    - numpy >=1.7.1
    - scipy >=0.11.0
    - bson
    - pyevolve
    - cobyla
    - conmin
    - newsumt
    - pytz
    - slsqp

build:
  preserve_egg_dir: True
  entry_points:
    - openmdao.lib.drivers.adaptivesampledriver.AdaptiveSampleDriver = openmdao.lib.drivers.adaptivesampledriver:AdaptiveSampleDriver
    - openmdao.lib.drivers.broydensolver.BroydenSolver = openmdao.lib.drivers.broydensolver:BroydenSolver
    - openmdao.lib.drivers.caseiterdriver.CaseIteratorDriver = openmdao.lib.drivers.caseiterdriver:CaseIteratorDriver
    - openmdao.lib.drivers.conmindriver.CONMINdriver = openmdao.lib.drivers.conmindriver:CONMINdriver
    - openmdao.lib.drivers.cobyladriver.COBYLAdriver = openmdao.lib.drivers.cobyladriver:COBYLAdriver
    - openmdao.lib.drivers.doedriver.DOEdriver = openmdao.lib.drivers.doedriver:DOEdriver
    - openmdao.lib.drivers.doedriver.NeighborhoodDOEdriver = openmdao.lib.drivers.doedriver:NeighborhoodDOEdriver
    - openmdao.lib.drivers.genetic.Genetic = openmdao.lib.drivers.genetic:Genetic
    - openmdao.lib.drivers.iterate.FixedPointIterator = openmdao.lib.drivers.iterate:FixedPointIterator
    - openmdao.lib.drivers.iterate.IterateUntil = openmdao.lib.drivers.iterate:IterateUntil
    - openmdao.lib.drivers.newton_solver.NewtonSolver = openmdao.lib.drivers.newton_solver:NewtonSolver
    - openmdao.lib.drivers.newsumtdriver.NEWSUMTdriver = openmdao.lib.drivers.newsumtdriver:NEWSUMTdriver
    - openmdao.lib.drivers.simplecid.SimpleCaseIterDriver = openmdao.lib.drivers.simplecid:SimpleCaseIterDriver
    - openmdao.lib.drivers.slsqpdriver.SLSQPdriver = openmdao.lib.drivers.slsqpdriver:SLSQPdriver
    - openmdao.lib.drivers.sensitivity.SensitivityDriver = openmdao.lib.drivers.sensitivity:SensitivityDriver
    - openmdao.lib.drivers.brent.Brent = openmdao.lib.drivers.brent:Brent
    - openmdao.lib.components.expected_improvement.ExpectedImprovement = openmdao.lib.components.expected_improvement:ExpectedImprovement
    - openmdao.lib.components.expected_improvement_multiobj.MultiObjExpectedImprovement = openmdao.lib.components.expected_improvement_multiobj:MultiObjExpectedImprovement
    - openmdao.lib.components.external_code.ExternalCode = openmdao.lib.components.external_code:ExternalCode
    - openmdao.lib.components.metamodel.MetaModel = openmdao.lib.components.metamodel:MetaModel
    - openmdao.lib.components.mux.Mux = openmdao.lib.components.mux:Mux
    - openmdao.lib.components.mux.DeMux = openmdao.lib.components.mux:DeMux
    - openmdao.lib.components.broadcaster.Broadcaster = openmdao.lib.components.broadcaster:Broadcaster
    - openmdao.lib.components.pareto_filter.ParetoFilter = openmdao.lib.components.pareto_filter:ParetoFilter
    - openmdao.lib.components.linear_distribution.LinearDistribution = openmdao.lib.components.linear_distribution:LinearDistribution
    - openmdao.lib.components.sleep_comp.SleepComponent = openmdao.lib.components.sleep_comp:SleepComponent
    - openmdao.lib.components.linear_system.LinearSystem = openmdao.lib.componnets.linear_system:LinearSystem
    - openmdao.lib.geometry.stl_group.STLGroup = openmdao.lib.components.stl_group:STLGroup
    - openmdao.lib.geometry.box.BoxParametricGeometry = openmdao.lib.components.box:BoxParametricGeometry
    - openmdao.lib.components.multi_metamodel.MultiFiMetaModel = openmdao.lib.components.multi_metamodel:MultiFiMetaModel
    - openmdao.lib.surrogatemodels.kriging_surrogate.KrigingSurrogate = openmdao.lib.surrogatemodels.kriging_surrogate:KrigingSurrogate
    - openmdao.lib.surrogatemodels.kriging_surrogate.FloatKrigingSurrogate = openmdao.lib.surrogatemodels.kriging_surrogate:FloatKrigingSurrogate
    - openmdao.lib.surrogatemodels.multifi_cokriging_surrogate.MultiFiCoKrigingSurrogate = openmdao.lib.surrogatemodels.multifi_cokriging_surrogate:MultiFiCoKrigingSurrogate
    - openmdao.lib.surrogatemodels.multifi_cokriging_surrogate.FloatMultiFiCoKrigingSurrogate = openmdao.lib.surrogatemodels.multifi_cokriging_surrogate:FloatMultiFiCoKrigingSurrogate
    - openmdao.lib.surrogatemodels.logistic_regression.LogisticRegression = openmdao.lib.surrogatemodels.logistic_regression:LogisticRegression
    - openmdao.lib.surrogatemodels.response_surface.ResponseSurface = openmdao.lib.surrogatemodels.response_surface:ResponseSurface
    - openmdao.lib.optproblems.sellar.SellarProblem = openmdao.lib.optproblems.sellar:SellarProblem
    - openmdao.lib.optproblems.branin.BraninProblem = openmdao.lib.optproblems.branin:BraninProblem
    - openmdao.lib.optproblems.polyscale.PolyScalableProblem = openmdao.lib.optproblems.polyscale:PolyScalableProblem
    - openmdao.lib.casehandlers.dumpcase.DumpCaseRecorder = openmdao.lib.casehandlers.dumpcase:DumpCaseRecorder
    - openmdao.lib.casehandlers.listcase.ListCaseRecorder = openmdao.lib.casehandlers.listcase:ListCaseRecorder
    - openmdao.lib.casehandlers.dbcase.DBCaseRecorder = openmdao.lib.casehandlers.dbcase:DBCaseRecorder
    - openmdao.lib.casehandlers.csvcase.CSVCaseRecorder = openmdao.lib.casehandlers.csvcase:CSVCaseRecorder
    - openmdao.lib.casehandlers.caseset.CaseArray = openmdao.lib.casehandlers.caseset:CaseArray
    - openmdao.lib.casehandlers.caseset.CaseSet = openmdao.lib.casehandlers.caseset:CaseSet
    - openmdao.lib.casehandlers.jsoncase.JSONCaseRecorder = openmdao.lib.casehandlers.jsoncase:JSONCaseRecorder
    - openmdao.lib.casehandlers.jsoncase.BSONCaseRecorder = openmdao.lib.casehandlers.jsoncase:BSONCaseRecorder
    - openmdao.lib.casehandlers.listcase.ListCaseIterator = openmdao.lib.casehandlers.listcase:ListCaseIterator
    - openmdao.lib.casehandlers.dbcase.DBCaseIterator = openmdao.lib.casehandlers.dbcase:DBCaseIterator
    - openmdao.lib.casehandlers.csvcase.CSVCaseIterator = openmdao.lib.casehandlers.csvcase:CSVCaseIterator
    - openmdao.lib.casehandlers.caseset.CaseArray = openmdao.lib.casehandlers.caseset:CaseArray
    - openmdao.lib.casehandlers.caseset.CaseSet = openmdao.lib.casehandlers.caseset:CaseSet
    - openmdao.lib.casehandlers.filters.ExprCaseFilter = openmdao.lib.casehandlers.filters:ExprCaseFilter
    - openmdao.lib.casehandlers.filters.IteratorCaseFilter = openmdao.lib.casehandlers.filters:IteratorCaseFilter
    - openmdao.lib.casehandlers.filters.SequenceCaseFilter = openmdao.lib.casehandlers.filters:SequenceCaseFilter
    - openmdao.lib.casehandlers.filters.SliceCaseFilter = openmdao.lib.casehandlers.filters:SliceCaseFilter
    - openmdao.lib.doegenerators.full_factorial.FullFactorial = openmdao.lib.doegenerators.full_factorial:FullFactorial
    - openmdao.lib.doegenerators.central_composite.CentralComposite = openmdao.lib.doegenerators.central_composite:CentralComposite
    - openmdao.lib.doegenerators.optlh.OptLatinHypercube = openmdao.lib.doegenerators.optlh:OptLatinHypercube
    - openmdao.lib.doegenerators.uniform.Uniform = openmdao.lib.doegenerators.uniform:Uniform
    - openmdao.lib.doegenerators.csvfile.CSVFile = openmdao.lib.doegenerators.csvfile:CSVFile
    - openmdao.lib.architectures.bliss.BLISS = openmdao.lib.architectures.bliss:BLISS
    - openmdao.lib.architectures.co.CO = openmdao.lib.architectures.co:CO
    - openmdao.lib.architectures.ego.EGO = openmdao.lib.architectures.ego:EGO
    - openmdao.lib.architectures.mdf.MDF = openmdao.lib.architectures.mdf:MDF
    - openmdao.lib.geometry.box.BoxParametricGeometry = openmdao.lib.geometry.box:BoxParametricGeometry
    - openmdao.lib.geometry.stl.STLSender = openmdao.lib.geometry.stl:STLSender
    - openmdao.lib.geometry.box.BoxSender = openmdao.lib.geometry.box:BoxSender
    - openmdao.lib.geometry.stl_group.STLGroupSender = openmdao.lib.geometry.stl_group:STLGroupSender

about:
  home:  http://openmdao.org
  license:  Apache 2.0
  summary:  "Open-source Multidisciplinary Design, Analysis and Optimazation framework in Python."
